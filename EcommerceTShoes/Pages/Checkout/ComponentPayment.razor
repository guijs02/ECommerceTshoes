@page "/pagamento"
@using EcommerceAPI.Services.Interfaces
@using EcommerceWeb.Pages.Login
@using EcommerceWeb.Services;

@inject NavigationManager _navigation
@inject ICarrinhoService _cartService

<AuthorizeView>
    <Authorized>
        <FormPayment PaymentClick="async (payment) => await Checkout(payment)">

        </FormPayment>
      
    </Authorized>
    <NotAuthorized>

        <Login IsRedirectToCheckout=true>

        </Login>

    </NotAuthorized>

</AuthorizeView>


@code {
    public bool Loading { get; set; }
    OrderDetails orderDetails { get; set; }

    protected override async Task OnInitializedAsync()
    {
        orderDetails = new();
        orderDetails.Cart = new();
        orderDetails.Payment = new();
        await base.OnInitializedAsync();
    }
    public async Task Checkout(PaymentViewModel payment)
    {

        try
        {
            orderDetails.Cart = await _cartService.GetAllCarrinho();
            orderDetails.Payment = payment;
            await _cartService.Checkout(orderDetails);
            await ExibirSpinner();
            _navigation.NavigateTo("/paymentSucess");
            StateHasChanged();

        }
        catch (Exception)
        {

            throw;
        }

    }
    private async Task ExibirSpinner()
    {
        Loading = true;
        await Task.Delay(4000).ContinueWith(_ => Loading = false);
    }
}
